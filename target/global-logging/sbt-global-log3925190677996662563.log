[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 1.8.0_261)
[debug] Load.defaultLoad until apply took 1005.445ms
[debug]           Load.loadUnit: plugins took 116.2539ms
[debug]           Load.loadUnit: defsScala took 0.349ms
[debug] [Loading] Scanning directory C:\MY_PROJECT\test_avelchuk_a\project
[debug]             Load.loadUnit: mkEval took 7.8524ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\MY_PROJECT\test_avelchuk_a\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 33.2514 ms
[info] loading settings for project test_avelchuk_a-build from plugins.sbt ...
[debug]               Load.resolveProject(test_avelchuk_a-build) took 83.068ms
[debug]             Load.loadTransitive: finalizeProject(Project(id test_avelchuk_a-build, base: C:\MY_PROJECT\test_avelchuk_a\project, plugins: List(<none>))) took 174.2167ms
[debug] [Loading] Done in C:\MY_PROJECT\test_avelchuk_a\project, returning: (test_avelchuk_a-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 485.561ms
[debug]           Load.loadUnit: cleanEvalClasses took 16.5166ms
[debug]         Load.loadUnit(file:/C:/MY_PROJECT/test_avelchuk_a/project/, ...) took 626.5568ms
[debug]       Load.apply: load took 836.3959ms
[debug]       Load.apply: resolveProjects took 7.9453ms
[debug]       Load.apply: finalTransforms took 87.8931ms
[debug]       Load.apply: config.delegates took 14.3767ms
[debug]       Load.apply: Def.make(settings)... took 565.7484ms
[debug]       Load.apply: structureIndex took 124.4209ms
[debug]       Load.apply: mkStreams took 1.9725ms
[info] loading project definition from C:\MY_PROJECT\test_avelchuk_a\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3654.9455ms
[debug]     Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory C:\MY_PROJECT\test_avelchuk_a
[debug]       Load.loadUnit: mkEval took 0.4346ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(play.sbt.PlayJava), Atom(play.ebean.sbt.PlayEbean), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(play.sbt.Play),Set(Atom(play.sbt.routes.RoutesCompiler)))
[debug] Clause(Atom(play.sbt.Play),Set(Atom(com.typesafe.sbt.jse.SbtJsTask)))
[debug] Clause(Atom(play.sbt.Play),Set(Atom(com.typesafe.sbt.packager.archetypes.JavaServerAppPackaging)))
[debug] Clause(Atom(play.sbt.Play),Set(Atom(play.twirl.sbt.SbtTwirl)))
[debug] Clause(Atom(play.sbt.PlayAkkaHttp2Support),Set(Atom(play.sbt.PlayAkkaHttpServer)))
[debug] Clause(Atom(play.sbt.PlayAkkaHttp2Support),Set(Atom(com.lightbend.sbt.javaagent.JavaAgent)))
[debug] Clause(Atom(play.sbt.PlayAkkaHttpServer),Set(Atom(play.sbt.PlayService)))
[debug] Clause(Atom(play.sbt.PlayFilters),Set(Atom(play.sbt.PlayWeb)))
[debug] Clause(Atom(play.sbt.PlayJava),Set(Atom(play.sbt.PlayWeb)))
[debug] Clause(Atom(play.sbt.PlayLayoutPlugin),Set(Atom(play.sbt.PlayWeb)))
[debug] Clause(Atom(play.sbt.PlayLogback),Set(Atom(play.sbt.PlayService)))
[debug] Clause(Atom(play.sbt.PlayMinimalJava),Set(Atom(play.sbt.PlayWeb)))
[debug] Clause(Atom(play.sbt.PlayNettyServer),Set(Atom(play.sbt.PlayService)))
[debug] Clause(Atom(play.sbt.PlayScala),Set(Atom(play.sbt.PlayWeb)))
[debug] Clause(Atom(play.sbt.PlayService),Set(Atom(com.typesafe.sbt.packager.archetypes.JavaServerAppPackaging)))
[debug] Clause(Atom(play.sbt.PlayWeb),Set(Atom(play.sbt.routes.RoutesCompiler)))
[debug] Clause(Atom(play.sbt.PlayWeb),Set(Atom(com.typesafe.sbt.jse.SbtJsTask)))
[debug] Clause(Atom(play.sbt.PlayWeb),Set(Atom(play.sbt.PlayService)))
[debug] Clause(Atom(play.sbt.PlayWeb),Set(Atom(play.twirl.sbt.SbtTwirl)))
[debug] Clause(Atom(play.sbt.routes.RoutesCompiler),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(play.sbt.test.MediatorWorkaroundPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(play.ebean.sbt.PlayEbean),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(play.twirl.sbt.SbtTwirl),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.SbtNativePackager),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging),Set(Atom(com.typesafe.sbt.packager.windows.WindowsPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging),Set(Atom(com.typesafe.sbt.packager.docker.DockerPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging),Set(Atom(com.typesafe.sbt.packager.debian.DebianPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging),Set(Atom(com.typesafe.sbt.packager.rpm.RpmPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.JavaServerAppPackaging),Set(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.jar.ClasspathJarPlugin),Set(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.jar.LauncherJarPlugin),Set(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.jlink.JlinkPlugin),Set(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.scripts.AshScriptPlugin),Set(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.scripts.AshScriptPlugin),Set(Atom(com.typesafe.sbt.packager.archetypes.scripts.BashStartScriptPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.scripts.BashStartScriptPlugin),Set(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.scripts.BatStartScriptPlugin),Set(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.systemloader.SystemVPlugin),Set(Atom(com.typesafe.sbt.packager.archetypes.systemloader.SystemloaderPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.systemloader.SystemdPlugin),Set(Atom(com.typesafe.sbt.packager.archetypes.systemloader.SystemloaderPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.systemloader.SystemloaderPlugin),Set(Atom(com.typesafe.sbt.packager.debian.DebianPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.systemloader.SystemloaderPlugin),Set(Atom(com.typesafe.sbt.packager.rpm.RpmPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.systemloader.UpstartPlugin),Set(Atom(com.typesafe.sbt.packager.archetypes.systemloader.SystemloaderPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.debian.DebianDeployPlugin),Set(Atom(com.typesafe.sbt.packager.debian.DebianPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.debian.DebianPlugin),Set(Atom(com.typesafe.sbt.packager.linux.LinuxPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.debian.JDebPackaging),Set(Atom(com.typesafe.sbt.packager.debian.DebianPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.docker.DockerPlugin),Set(Atom(com.typesafe.sbt.packager.universal.UniversalPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.docker.DockerSpotifyClientPlugin),Set(Atom(com.typesafe.sbt.packager.docker.DockerPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.graalvmnativeimage.GraalVMNativeImagePlugin),Set(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging)))
[debug] Clause(Atom(com.typesafe.sbt.packager.jdkpackager.JDKPackagerDeployPlugin),Set(Atom(com.typesafe.sbt.packager.jdkpackager.JDKPackagerPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.jdkpackager.JDKPackagerPlugin),Set(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging)))
[debug] Clause(Atom(com.typesafe.sbt.packager.jdkpackager.JDKPackagerPlugin),Set(Atom(com.typesafe.sbt.packager.archetypes.jar.LauncherJarPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.linux.LinuxPlugin),Set(Atom(com.typesafe.sbt.packager.universal.UniversalPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.rpm.RpmDeployPlugin),Set(Atom(com.typesafe.sbt.packager.rpm.RpmPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.rpm.RpmPlugin),Set(Atom(com.typesafe.sbt.packager.linux.LinuxPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.universal.UniversalDeployPlugin),Set(Atom(com.typesafe.sbt.packager.universal.UniversalPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.universal.UniversalPlugin),Set(Atom(com.typesafe.sbt.SbtNativePackager)))
[debug] Clause(Atom(com.typesafe.sbt.packager.windows.WindowsDeployPlugin),Set(Atom(com.typesafe.sbt.packager.windows.WindowsPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.windows.WindowsPlugin),Set(Atom(com.typesafe.sbt.packager.universal.UniversalPlugin)))
[debug] Clause(Atom(com.lightbend.sbt.javaagent.JavaAgent),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(com.lightbend.sbt.javaagent.JavaAgentPackaging),Set(Atom(com.lightbend.sbt.javaagent.JavaAgent)))
[debug] Clause(Atom(com.lightbend.sbt.javaagent.JavaAgentPackaging),Set(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging)))
[debug] Clause(Atom(com.typesafe.sbt.web.SbtWeb),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.jse.SbtJsEngine),Set(Atom(com.typesafe.sbt.web.SbtWeb)))
[debug] Clause(Atom(com.typesafe.sbt.jse.SbtJsTask),Set(Atom(com.typesafe.sbt.jse.SbtJsEngine)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(play.sbt.PlayService),Set(Atom(play.sbt.PlayAkkaHttpServer)))
[debug] Clause(Atom(play.sbt.PlayWeb),Set(Atom(play.sbt.PlayFilters)))
[debug] Clause(Atom(play.sbt.PlayWeb),Set(Atom(play.sbt.PlayLayoutPlugin)))
[debug] Clause(Atom(play.sbt.PlayService),Set(Atom(play.sbt.PlayLogback)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging),Set(Atom(com.typesafe.sbt.packager.archetypes.scripts.BashStartScriptPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging),Set(Atom(com.typesafe.sbt.packager.archetypes.scripts.BatStartScriptPlugin)))
[debug] Clause(And(Set(Atom(com.lightbend.sbt.javaagent.JavaAgent), Atom(com.typesafe.sbt.packager.archetypes.JavaAppPackaging))),Set(Atom(com.lightbend.sbt.javaagent.JavaAgentPackaging)))
[debug] Clause(Atom(com.typesafe.sbt.web.SbtWeb),Set(Atom(com.typesafe.sbt.jse.SbtJsEngine)))
[debug] Clause(Atom(com.typesafe.sbt.jse.SbtJsEngine),Set(Atom(com.typesafe.sbt.jse.SbtJsTask))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,play.ebean.sbt.PlayEbean,play.sbt.PlayJava,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,play.sbt.PlayWeb,play.twirl.sbt.SbtTwirl,play.sbt.PlayService,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,play.sbt.PlayFilters,play.sbt.PlayLayoutPlugin,play.sbt.routes.RoutesCompiler,com.typesafe.sbt.jse.SbtJsTask,sbt.plugins.MiniDependencyTreePlugin,play.sbt.PlayLogback,play.sbt.PlayAkkaHttpServer,com.typesafe.sbt.jse.SbtJsEngine,com.typesafe.sbt.packager.archetypes.JavaServerAppPackaging,com.typesafe.sbt.web.SbtWeb,com.typesafe.sbt.packager.archetypes.JavaAppPackaging,com.typesafe.sbt.packager.rpm.RpmPlugin,com.typesafe.sbt.packager.archetypes.scripts.BashStartScriptPlugin,com.typesafe.sbt.packager.windows.WindowsPlugin,com.typesafe.sbt.packager.archetypes.scripts.BatStartScriptPlugin,com.typesafe.sbt.packager.docker.DockerPlugin,com.typesafe.sbt.packager.debian.DebianPlugin,com.typesafe.sbt.packager.universal.UniversalPlugin,com.typesafe.sbt.packager.linux.LinuxPlugin,com.typesafe.sbt.SbtNativePackager)
[debug] Plugins.deducer#function took 19.2633 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 142.2901ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\MY_PROJECT\test_avelchuk_a, plugins: List(play.sbt.PlayJava && play.ebean.sbt.PlayEbean))) took 164.6105ms
[debug] [Loading] Done in C:\MY_PROJECT\test_avelchuk_a, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 372.8991ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.4419ms
[debug]   Load.loadUnit(file:/C:/MY_PROJECT/test_avelchuk_a/, ...) took 4032.9152ms
[debug] Load.apply: load took 4056.6864ms
[debug] Load.apply: resolveProjects took 0.176ms
[debug] Load.apply: finalTransforms took 17.5011ms
[debug] Load.apply: config.delegates took 1.6588ms
[debug] Load.apply: Def.make(settings)... took 161.9308ms
[debug] Load.apply: structureIndex took 53.018ms
[debug] Load.apply: mkStreams took 0.013ms
[info]   __              __
[info]   \ \     ____   / /____ _ __  __
[info]    \ \   / __ \ / // __ `// / / /
[info]    / /  / /_/ // // /_/ // /_/ /
[info]   /_/  / .___//_/ \__,_/ \__, /
[info]       /_/               /____/
[info] 
[info] Version 2.8.16 running Java 1.8.0_261
[info] 
[info] Play is run entirely by the community. Please consider contributing and/or donating:
[info] https://www.playframework.com/sponsors
[info] 
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(project root, None, None)
[info]   __              __
[info]   \ \     ____   / /____ _ __  __
[info]    \ \   / __ \ / // __ `// / / /
[info]    / /  / /_/ // // /_/ // /_/ /
[info]   /_/  / .___//_/ \__,_/ \__, /
[info]       /_/               /____/
[info] 
[info] Version 2.8.16 running Java 1.8.0_261
[info] 
[info] Play is run entirely by the community. Please consider contributing and/or donating:
[info] https://www.playframework.com/sponsors
[info] 
[debug] > Exec(run, None, None)
[debug] Evaluating tasks: Compile / run
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source and 1 Java source to C:\MY_PROJECT\test_avelchuk_a\target\scala-2.13\classes ...
[error] C:\MY_PROJECT\test_avelchuk_a\app\controllers\PersonController.java:61:1: method render in class views.html.login cannot be applied to given types;
[error]   required: no arguments
[error]   found: scala.collection.immutable.Seq<models.Person>,play.data.Form<controllers.PersonData>,play.mvc.Http.Request,play.i18n.Messages
[error]   reason: actual and formal argument lists differ in length
[error] views.html.login.render
[error] C:\MY_PROJECT\test_avelchuk_a\app\controllers\PersonController.java:71:1: method render in class views.html.login cannot be applied to given types;
[error]   required: no arguments
[error]   found: scala.collection.immutable.Seq<models.Person>,play.data.Form<controllers.PersonData>,play.mvc.Http.Request,play.i18n.Messages
[error]   reason: actual and formal argument lists differ in length
[error] views.html.login.render
[error] C:\MY_PROJECT\test_avelchuk_a\app\controllers\PersonController.java:80:1: method render in class views.html.login cannot be applied to given types;
[error]   required: no arguments
[error]   found: scala.collection.immutable.Seq<models.Person>,play.data.Form<controllers.PersonData>,play.mvc.Http.Request,play.i18n.Messages
[error]   reason: actual and formal argument lists differ in length
[error] views.html.login.render
[error] (Compile / compileIncremental) javac returned non-zero exit code
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source and 1 Java source to C:\MY_PROJECT\test_avelchuk_a\target\scala-2.13\classes ...
[info] done compiling
[info] compiling 1 Scala source to C:\MY_PROJECT\test_avelchuk_a\target\scala-2.13\classes ...
[info] done compiling
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:test_avelchuk
[info] compiling 6 Scala sources and 11 Java sources to C:\MY_PROJECT\test_avelchuk_a\target\scala-2.13\classes ...
[info] done compiling
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Java source to C:\MY_PROJECT\test_avelchuk_a\target\scala-2.13\classes ...
[info] done compiling
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:test_avelchuk
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Java source to C:\MY_PROJECT\test_avelchuk_a\target\scala-2.13\classes ...
[info] done compiling
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:test_avelchuk
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to C:\MY_PROJECT\test_avelchuk_a\target\scala-2.13\classes ...
[info] done compiling
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:test_avelchuk
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to C:\MY_PROJECT\test_avelchuk_a\target\scala-2.13\classes ...
[warn] C:\MY_PROJECT\test_avelchuk_a\app\views\login.scala.html:18:82: Auto-application to `()` is deprecated. Supply the empty argument list `()` explicitly to invoke method registrationPerson,
[warn] or remove the empty argument list from its definition (Java-defined methods are exempt).
[warn] In Scala 3, an unapplied method like this will be eta-expanded into a function.
[warn]             <button autofocus type="submit" formaction="@routes.PersonController.registrationPerson">Регистрация</button>
[warn]                                                                                  ^
[warn] one warning found
[info] done compiling
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:test_avelchuk
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to C:\MY_PROJECT\test_avelchuk_a\target\scala-2.13\classes ...
[warn] C:\MY_PROJECT\test_avelchuk_a\app\views\login.scala.html:18:78: Auto-application to `()` is deprecated. Supply the empty argument list `()` explicitly to invoke method registrationPerson,
[warn] or remove the empty argument list from its definition (Java-defined methods are exempt).
[warn] In Scala 3, an unapplied method like this will be eta-expanded into a function.
[warn]             <button autofocus type="submit" action="@routes.PersonController.registrationPerson">Регистрация</button>
[warn]                                                                              ^
[warn] one warning found
[info] done compiling
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:test_avelchuk
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to C:\MY_PROJECT\test_avelchuk_a\target\scala-2.13\classes ...
[warn] C:\MY_PROJECT\test_avelchuk_a\app\views\login.scala.html:18:86: Auto-application to `()` is deprecated. Supply the empty argument list `()` explicitly to invoke method registrationPerson,
[warn] or remove the empty argument list from its definition (Java-defined methods are exempt).
[warn] In Scala 3, an unapplied method like this will be eta-expanded into a function.
[warn]             <button formmethod="post" type="submit" action="@routes.PersonController.registrationPerson">Регистрация</button>
[warn]                                                                                      ^
[warn] one warning found
[info] done compiling
[debug] Forcing garbage collection...
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:test_avelchuk
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to C:\MY_PROJECT\test_avelchuk_a\target\scala-2.13\classes ...
[warn] C:\MY_PROJECT\test_avelchuk_a\app\views\login.scala.html:18:86: Auto-application to `()` is deprecated. Supply the empty argument list `()` explicitly to invoke method registrationPerson,
[warn] or remove the empty argument list from its definition (Java-defined methods are exempt).
[warn] In Scala 3, an unapplied method like this will be eta-expanded into a function.
[warn]             <button formmethod="post" type="submit" action="@routes.PersonController.registrationPerson">Регистрация</button>
[warn]                                                                                      ^
[warn] one warning found
[info] done compiling
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:test_avelchuk
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to C:\MY_PROJECT\test_avelchuk_a\target\scala-2.13\classes ...
[warn] C:\MY_PROJECT\test_avelchuk_a\app\views\login.scala.html:18:86: Auto-application to `()` is deprecated. Supply the empty argument list `()` explicitly to invoke method registrationPerson,
[warn] or remove the empty argument list from its definition (Java-defined methods are exempt).
[warn] In Scala 3, an unapplied method like this will be eta-expanded into a function.
[warn]             <button formmethod="post" type="submit" action="@routes.PersonController.registrationPerson">Регистрация</button>
[warn]                                                                                      ^
[warn] one warning found
[info] done compiling
[info] compiling 1 Java source to C:\MY_PROJECT\test_avelchuk_a\target\scala-2.13\classes ...
[error] C:\MY_PROJECT\test_avelchuk_a\app\controllers\PersonController.java:37:1: method render in class views.html.login cannot be applied to given types;
[error]   required: play.twirl.api.Html
[error]   found: no arguments
[error]   reason: actual and formal argument lists differ in length
[error] views.html.login.render
[error] C:\MY_PROJECT\test_avelchuk_a\app\controllers\PersonController.java:44:1: method render in class views.html.login cannot be applied to given types;
[error]   required: play.twirl.api.Html
[error]   found: no arguments
[error]   reason: actual and formal argument lists differ in length
[error] views.html.login.render
[error] C:\MY_PROJECT\test_avelchuk_a\app\controllers\PersonController.java:54:1: method render in class views.html.login cannot be applied to given types;
[error]   required: play.twirl.api.Html
[error]   found: no arguments
[error]   reason: actual and formal argument lists differ in length
[error] views.html.login.render
[error] C:\MY_PROJECT\test_avelchuk_a\app\controllers\PersonController.java:63:1: method render in class views.html.login cannot be applied to given types;
[error]   required: play.twirl.api.Html
[error]   found: no arguments
[error]   reason: actual and formal argument lists differ in length
[error] views.html.login.render
[error] (Compile / compileIncremental) javac returned non-zero exit code
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to C:\MY_PROJECT\test_avelchuk_a\target\scala-2.13\classes ...
[warn] C:\MY_PROJECT\test_avelchuk_a\app\views\login.scala.html:11:86: Auto-application to `()` is deprecated. Supply the empty argument list `()` explicitly to invoke method registrationPerson,
[warn] or remove the empty argument list from its definition (Java-defined methods are exempt).
[warn] In Scala 3, an unapplied method like this will be eta-expanded into a function.
[warn]             <button formmethod="post" type="submit" action="@routes.PersonController.registrationPerson">Регистрация</button>
[warn]                                                                                      ^
[warn] one warning found
[info] done compiling
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:test_avelchuk
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to C:\MY_PROJECT\test_avelchuk_a\target\scala-2.13\classes ...
[warn] C:\MY_PROJECT\test_avelchuk_a\app\views\login.scala.html:11:86: Auto-application to `()` is deprecated. Supply the empty argument list `()` explicitly to invoke method registrationPerson,
[warn] or remove the empty argument list from its definition (Java-defined methods are exempt).
[warn] In Scala 3, an unapplied method like this will be eta-expanded into a function.
[warn]             <button formmethod="post" type="submit" action="@routes.PersonController.registrationPerson">Регистрация</button>
[warn]                                                                                      ^
[warn] one warning found
[info] done compiling
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:test_avelchuk
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to C:\MY_PROJECT\test_avelchuk_a\target\scala-2.13\classes ...
[warn] C:\MY_PROJECT\test_avelchuk_a\app\views\login.scala.html:18:86: Auto-application to `()` is deprecated. Supply the empty argument list `()` explicitly to invoke method registrationPerson,
[warn] or remove the empty argument list from its definition (Java-defined methods are exempt).
[warn] In Scala 3, an unapplied method like this will be eta-expanded into a function.
[warn]             <button formmethod="post" type="submit" action="@routes.PersonController.registrationPerson">Регистрация</button>
[warn]                                                                                      ^
[warn] one warning found
[info] done compiling
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:test_avelchuk
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
